# .github/workflows/ci.yml
name: Continuous Integration

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        
    - name: Check formatting with Black
      run: black --check src tests
        
    - name: Check import sorting with isort
      run: isort --check src tests
        
    - name: Lint with flake8
      run: flake8 src tests
      
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
        
    - name: Security scan with Bandit
      run: bandit -r src/
      
    - name: Dependency security check with Safety
      run: safety check -r requirements.txt
      
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: [lint, security]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        
    - name: Run unit tests
      run: pytest tests/unit -v
      
    - name: Run integration tests
      run: pytest tests/integration -v
      
    - name: Run security tests
      run: pytest tests/security -v
      
    - name: Generate coverage report
      run: pytest --cov=src tests/ --cov-report=xml
      
    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false